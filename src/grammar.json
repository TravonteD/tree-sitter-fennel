{
  "name": "fennel",
  "word": "identifier",
  "rules": {
    "program": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_statement"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          }
        ]
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "require"
        },
        {
          "type": "SYMBOL",
          "name": "function_call"
        },
        {
          "type": "SYMBOL",
          "name": "_function"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_variable_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "_iterator"
        },
        {
          "type": "SYMBOL",
          "name": "_conditional"
        },
        {
          "type": "SYMBOL",
          "name": "hash_function_definition"
        },
        {
          "type": "SYMBOL",
          "name": "do_statement"
        }
      ]
    },
    "_function": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function_definition"
        },
        {
          "type": "SYMBOL",
          "name": "lambda_definition"
        }
      ]
    },
    "_variable_declaration": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "let_definition"
        },
        {
          "type": "SYMBOL",
          "name": "local_definition"
        },
        {
          "type": "SYMBOL",
          "name": "var_definition"
        },
        {
          "type": "SYMBOL",
          "name": "global_definition"
        },
        {
          "type": "SYMBOL",
          "name": "set"
        },
        {
          "type": "SYMBOL",
          "name": "tset"
        }
      ]
    },
    "_iterator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "each"
        },
        {
          "type": "SYMBOL",
          "name": "for"
        },
        {
          "type": "SYMBOL",
          "name": "while"
        }
      ]
    },
    "_conditional": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "if_statement"
        },
        {
          "type": "SYMBOL",
          "name": "when_statement"
        },
        {
          "type": "SYMBOL",
          "name": "match_statement"
        }
      ]
    },
    "require": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "require"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "field"
              },
              {
                "type": "SYMBOL",
                "name": "string"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "do_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "do"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "when_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "when"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "match_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "match"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "each": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "each"
        },
        {
          "type": "SYMBOL",
          "name": "each_clause"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "each_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "function_call"
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "for": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "for"
        },
        {
          "type": "SYMBOL",
          "name": "for_clause"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "for_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_statement"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "while": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "while"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "let_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "SYMBOL",
          "name": "assignments"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "local_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "local"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "assignment"
            },
            {
              "type": "SYMBOL",
              "name": "multi_value_assignment"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "var_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "var"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "assignment"
            },
            {
              "type": "SYMBOL",
              "name": "multi_value_assignment"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "global_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "global"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "assignment"
            },
            {
              "type": "SYMBOL",
              "name": "multi_value_assignment"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "set": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "set"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "assignment"
            },
            {
              "type": "SYMBOL",
              "name": "multi_value_assignment"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "tset": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "tset"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "table"
                },
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "SYMBOL",
              "name": "field"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_statement"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "assignments": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "multi_value_assignment"
              },
              {
                "type": "SYMBOL",
                "name": "assignment"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "assignment": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "SYMBOL",
              "name": "field_expression"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        }
      ]
    },
    "multi_value_assignment": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "value_list"
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        }
      ]
    },
    "value_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "field_expression"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "hash_function_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "STRING",
              "value": "hashfn"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "_statement"
              }
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "#"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "function_call"
                },
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                },
                {
                  "type": "SYMBOL",
                  "name": "sequential_table"
                }
              ]
            }
          ]
        }
      ]
    },
    "function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "fn"
        },
        {
          "type": "SYMBOL",
          "name": "_function_body"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "lambda_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "lambda"
            },
            {
              "type": "STRING",
              "value": "λ"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_function_body"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_function_body": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "FIELD",
              "name": "name",
              "content": {
                "type": "SYMBOL",
                "name": "identifier"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "parameters"
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_statement"
            }
          }
        }
      ]
    },
    "parameters": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "function_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "field_expression"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_operator"
                },
                "named": true,
                "value": "identifier"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_keyword"
                },
                "named": true,
                "value": "identifier"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "_statement"
              }
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "sequential_table": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "table": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "string"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "field"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "identifier"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "_statement"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "field_expression"
        },
        {
          "type": "SYMBOL",
          "name": "quoted_value"
        },
        {
          "type": "SYMBOL",
          "name": "unquoted_value"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "field"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "table"
        },
        {
          "type": "SYMBOL",
          "name": "sequential_table"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "nil"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_keyword"
          },
          "named": true,
          "value": "identifier"
        }
      ]
    },
    "escape_character": {
      "type": "PATTERN",
      "value": "(\\\\n|\\\\\")"
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "PATTERN",
            "value": "(\\\\\")|(.)"
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "quoted_value": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "STRING",
              "value": "`"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        }
      ]
    },
    "unquoted_value": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "field_expression": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "ALIAS",
                "content": {
                  "type": "SYMBOL",
                  "name": "_keyword"
                },
                "named": true,
                "value": "identifier"
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "REPEAT1",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "."
                    },
                    {
                      "type": "SYMBOL",
                      "name": "identifier"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    "_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_arithmetic_operator"
        },
        {
          "type": "SYMBOL",
          "name": "_comparison_operator"
        },
        {
          "type": "SYMBOL",
          "name": "_boolean_operator"
        },
        {
          "type": "SYMBOL",
          "name": "_threading_macro"
        },
        {
          "type": "SYMBOL",
          "name": "_misc_operator"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "colon"
          },
          "named": true,
          "value": "identifier"
        }
      ]
    },
    "_arithmetic_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "%"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "STRING",
          "value": "//"
        },
        {
          "type": "STRING",
          "value": "^"
        }
      ]
    },
    "_comparison_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "STRING",
          "value": ">="
        },
        {
          "type": "STRING",
          "value": "<="
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": "not="
        }
      ]
    },
    "_threading_macro": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "STRING",
          "value": "->>"
        },
        {
          "type": "STRING",
          "value": "-?>"
        },
        {
          "type": "STRING",
          "value": "-?>>"
        }
      ]
    },
    "_boolean_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "not"
        }
      ]
    },
    "_misc_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ".."
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "STRING",
          "value": "..."
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "nil": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "nil"
        }
      ]
    },
    "_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "_ENV"
        },
        {
          "type": "STRING",
          "value": "_G"
        },
        {
          "type": "STRING",
          "value": "_VERSION"
        },
        {
          "type": "STRING",
          "value": "arg"
        },
        {
          "type": "STRING",
          "value": "assert"
        },
        {
          "type": "STRING",
          "value": "collectgarbage"
        },
        {
          "type": "STRING",
          "value": "coroutine"
        },
        {
          "type": "STRING",
          "value": "debug"
        },
        {
          "type": "STRING",
          "value": "dofile"
        },
        {
          "type": "STRING",
          "value": "doto"
        },
        {
          "type": "STRING",
          "value": "error"
        },
        {
          "type": "STRING",
          "value": "eval-compiler"
        },
        {
          "type": "STRING",
          "value": "gensym"
        },
        {
          "type": "STRING",
          "value": "getmetatable"
        },
        {
          "type": "STRING",
          "value": "import-macros"
        },
        {
          "type": "STRING",
          "value": "in-scope?"
        },
        {
          "type": "STRING",
          "value": "include"
        },
        {
          "type": "STRING",
          "value": "ipairs"
        },
        {
          "type": "STRING",
          "value": "list"
        },
        {
          "type": "STRING",
          "value": "list?"
        },
        {
          "type": "STRING",
          "value": "load"
        },
        {
          "type": "STRING",
          "value": "loadfile"
        },
        {
          "type": "STRING",
          "value": "loadstring"
        },
        {
          "type": "STRING",
          "value": "macro"
        },
        {
          "type": "STRING",
          "value": "macrodebug"
        },
        {
          "type": "STRING",
          "value": "macroexpand"
        },
        {
          "type": "STRING",
          "value": "macros"
        },
        {
          "type": "STRING",
          "value": "multi-sym?"
        },
        {
          "type": "STRING",
          "value": "next"
        },
        {
          "type": "STRING",
          "value": "pairs"
        },
        {
          "type": "STRING",
          "value": "package"
        },
        {
          "type": "STRING",
          "value": "pcall"
        },
        {
          "type": "STRING",
          "value": "print"
        },
        {
          "type": "STRING",
          "value": "rawequal"
        },
        {
          "type": "STRING",
          "value": "rawget"
        },
        {
          "type": "STRING",
          "value": "rawlen"
        },
        {
          "type": "STRING",
          "value": "rawset"
        },
        {
          "type": "STRING",
          "value": "require-macros"
        },
        {
          "type": "STRING",
          "value": "select"
        },
        {
          "type": "STRING",
          "value": "sequence?"
        },
        {
          "type": "STRING",
          "value": "setmetatable"
        },
        {
          "type": "STRING",
          "value": "sym"
        },
        {
          "type": "STRING",
          "value": "sym?"
        },
        {
          "type": "STRING",
          "value": "table?"
        },
        {
          "type": "STRING",
          "value": "tonumber"
        },
        {
          "type": "STRING",
          "value": "tostring"
        },
        {
          "type": "STRING",
          "value": "type"
        },
        {
          "type": "STRING",
          "value": "unpack"
        },
        {
          "type": "STRING",
          "value": "varg?"
        },
        {
          "type": "STRING",
          "value": "xpcall"
        },
        {
          "type": "STRING",
          "value": "string"
        },
        {
          "type": "STRING",
          "value": "table"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "([_\\?A-Za-z][_\\?\\-A-Za-z0-9\\!]*)|(\\$([1-9])?)"
    },
    "number": {
      "type": "PATTERN",
      "value": "([-])?\\d+(\\.\\d+)?"
    },
    "comment": {
      "type": "PATTERN",
      "value": ";.*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "field"
    },
    {
      "type": "SYMBOL",
      "name": "colon"
    }
  ],
  "inline": [],
  "supertypes": []
}

